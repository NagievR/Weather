{"version":3,"sources":["components/date-time.js","components/temperature.js","components/outside-weather.js","components/secondary-info.js","components/update.js","components/current-location.js","components/change-location.js","components/location.js","components/alert.js","components/weather-widget.js","index.js"],"names":["DateTime","props","useState","elemForRender","setElemForRender","useEffect","isLoaded","clockTick","shiftUTC0","timerId","setInterval","clearInterval","className","id","shift","d","dayName","getDay","date","getDate","month","getMonth","hours","getHours","minutes","getMinutes","seconds","getSeconds","slice","formateDate","UTC0","milisecUTC0","Number","Date","setCityLocalTime","year","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","setUTC0Time","Temperature","feelsFormated","Math","round","feels","t","String","includes","formateCurrentTemp","temp","metric","OutsideWeater","src","updating","description","iconId","style","height","width","alt","metrics","humidity","pressure","wind","visibility","SecondaryInfo","value","data","obj","validatedData","k","isNaN","console","warn","validateData","info","toFixed","formateWind","convertPressure","InfoBlock","name","Update","nameForClass","onClick","alert","createAlert","updateWeather","city","country","CurrentLocation","showForm","ChangeLocationForm","setCity","setCountry","btnValue","setBtnValue","lastBtnValue","useRef","handleInputChange","event","target","defineButtonText","sendOrOnlyÐ¡lose","current","changeLocation","trim","onKeyDown","e","key","currBtnValue","closest","lastElementChild","autoFocus","placeholder","autoComplete","type","onChange","maxLength","Location","setShowForm","Alert","isOpen","message","text","closeAlertFunc","set","closeAlert","targClass","WeatherWidget","dataIsLoaded","feelsLike","size","color","secondaryInfo","API_KEY","initialStateOfData","App","setData","previousLocation","alertIsOpen","setAlertIsOpen","alertText","setAlertText","doRequest","currCity","currCountry","dataCopy","Object","assign","notifyDataIsLoading","getWeather","then","weather","prevWeather","error","alertSettings","cityFromInput","countryFromInput","a","log","fetch","response","json","cod","Error","sys","main","feels_like","icon","timezone","speed","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dbdd8b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nexport default DateTime;\r\n\r\nfunction DateTime(props) {\r\n  const [elemForRender, setElemForRender] = useState('loading...');\r\n  \r\n  useEffect(() => {\r\n    if (!props.isLoaded) {\r\n      return;\r\n    }\r\n    setElemForRender( clockTick(props.shiftUTC0) );\r\n    const timerId = setInterval(() => {\r\n      setElemForRender( clockTick(props.shiftUTC0) );\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timerId);\r\n  }, [props.isLoaded, props.shiftUTC0]);\r\n  \r\n  return(\r\n    <div className='thin-small-font' id='date'>{elemForRender}</div>\r\n  );\r\n}\r\n\r\nfunction clockTick(shift) {\r\n  const UTC0Time = setUTC0Time();\r\n  return formateDate( setCityLocalTime(UTC0Time, shift) );\r\n}\r\n\r\nfunction setUTC0Time() {\r\n  const d = new Date();\r\n  const year = d.getUTCFullYear();\r\n  const month = d.getUTCMonth();\r\n  const date = d.getUTCDate();\r\n  const hours = d.getUTCHours();\r\n  const minutes = d.getUTCMinutes();\r\n  const seconds = d.getUTCSeconds();\r\n\r\n  return new Date( year, month, \r\n    date, hours, minutes, seconds );\r\n}\r\n\r\nfunction setCityLocalTime(UTC0, shift) {\r\n  const milisecUTC0 = Number(UTC0);\r\n  const milisecShift = shift * 1000;\r\n  return new Date(milisecUTC0 + milisecShift);\r\n}\r\n\r\nfunction formateDate(d) {\r\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const months = [\r\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  const dayName = days[d.getDay()];\r\n  const date = d.getDate();\r\n  const month = months[d.getMonth()];\r\n  const hours = '0'+d.getHours();\r\n  const minutes = '0'+d.getMinutes();\r\n  const seconds = '0'+d.getSeconds();\r\n\r\n  return (`${dayName}, ${date} ${month}, ` +\r\n    `${hours.slice(-2)}:${minutes.slice(-2)}:${seconds.slice(-2)}`);\r\n}","import React from 'react';\r\nimport '../styles/temperature.css'\r\n\r\nexport default function Temperature(props) {\r\n  const feelsFormated = Math.round(props.feels);\r\n  const t = formateCurrentTemp(props.temp);\r\n  let metric = (props.temp && props.temp !== 0) ? 'Â°' : '';\r\n\r\n  return (\r\n    <div className='temperature-container'>\r\n      <div className='current'>{t}{metric}</div>\r\n      <div className='thin-small-font feels-like'>\r\n        but feels like {feelsFormated}&deg;\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction formateCurrentTemp(t) {\r\n  if (!t && t !== 0) {\r\n    return(<span className='loading thin-small-font'>loading...</span>);\r\n  } else if (String(t).includes('-') || t === 0) {\r\n    return Math.round(t);\r\n  } else {\r\n    return `+${Math.round(t)}`;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst WEATHER_ICONS_SRC = 'http://openweathermap.org/img/wn/';\r\nconst PLACEHOLDER_SRC = 'https://i.ibb.co/QMmS8X9/arrow-big.png';\r\n\r\nexport default function OutsideWeater(props) {\r\n  let description = props.description;\r\n  let src;\r\n  let updating;\r\n\r\n  if (!props.description) {\r\n    src = PLACEHOLDER_SRC;\r\n    updating = 'upd-animation';\r\n    description = 'loading...'\r\n  } else {\r\n    src = createSrc(props.iconId);\r\n  }\r\n\r\n  return ( \r\n    <div className='outside-info'>\r\n      <img \r\n        className={updating} \r\n        style={{height: '100px', width: '100px'}} \r\n        src={src} \r\n        alt={description}\r\n      />\r\n      <div className='outside-description thin-small-font'>\r\n        {description}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction createSrc(icon) {\r\n  return WEATHER_ICONS_SRC + icon + '@2x.png';\r\n}","import React from 'react';\r\nimport '../styles/secondary-info.css';\r\n\r\nconst metrics = {\r\n  humidity: '%',\r\n  pressure: `bar`,\r\n  wind: 'm/s',\r\n  visibility: 'km',\r\n};\r\n\r\nexport default function SecondaryInfo(props) {\r\n  let data = validateData(props.info); \r\n\r\n  // converting the values if its necessary\r\n  let visibility = convertVisibility(data.visibility);\r\n  let wind = formateWind(data.wind);\r\n  let pressure = convertPressure(data.pressure);\r\n  let humidity = data.humidity ? data.humidity : null;\r\n\r\n  return (\r\n    <div className='secondary-info-container'>\r\n      <InfoBlock info={ ['pressure', pressure] } /> \r\n      <InfoBlock info={ ['visibility', visibility] } />\r\n      <InfoBlock info={ ['wind', wind] } />\r\n      <InfoBlock info={ ['humidity', humidity] } />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InfoBlock(props) { \r\n  let [name, value] = props.info;\r\n  if (!value) {\r\n    value = <span className='loading thin-small-font'>loading...</span>\r\n    name = '';\r\n  }\r\n  return (\r\n    <div className={name}>\r\n      <div className='name thin-small-font'>{name}</div>\r\n      <div className='wrapper'>\r\n        <div className='value'>{value}</div>\r\n        <div className='metric'>{metrics[name]}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction validateData(obj) {\r\n  const validatedData = {};\r\n\r\n  for (let k in obj) {\r\n    const value = obj[k];\r\n\r\n    if (!isNaN(value) && value !== '') {\r\n      validatedData[k] = value;\r\n    } else {\r\n      console.warn(`Some problem with: \"${k}\".\\nIt's value is: \"${value}\".`);\r\n      validatedData[k] = null;\r\n    }\r\n  }\r\n  return validatedData;\r\n}\r\n\r\nfunction convertVisibility (value) { // m to km\r\n  return value ? String((value / 1000).toFixed(1)) : null;\r\n}\r\n\r\nfunction formateWind(value) {\r\n  return value ? (+value).toFixed(0) : null;\r\n}\r\n\r\nfunction convertPressure(value) { // mmHg to bar\r\n  return value ? (value / 750).toFixed(2) : null;\r\n}","import React from 'react';\r\n\r\nexport default function Update(props) {\r\n  const updatingImgSrc = 'https://i.ibb.co/bddFczT/small.png';\r\n\r\n  let nameForClass = 'update';\r\n  if (!props.isLoaded) {\r\n    nameForClass = 'update upd-animation';\r\n  } \r\n\r\n  function handleClick() {\r\n    updateWeather();\r\n  }\r\n\r\n  function updateWeather() {\r\n    if (!props.isLoaded) { //double click check \r\n      props.alert.createAlert('Loading is in the process already! Please wait.');\r\n      return; \r\n    }\r\n    props.updateWeather(props.city, props.country);\r\n  }\r\n\r\n  return (\r\n    <img\r\n      src={updatingImgSrc}\r\n      style={{height:'20px', width:'20px'}}\r\n      className={nameForClass} \r\n      alt='update'\r\n      onClick={handleClick}\r\n    />\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function CurrentLocation(props) {\r\n  function handleClick() {\r\n    props.showForm(true);\r\n  }\r\n\r\n  let currentElement;\r\n  if (!props.city) {\r\n    currentElement = (\r\n      <div style={{height: '41px'}}></div>\r\n    );\r\n  } else {\r\n    currentElement = (\r\n      <div \r\n        onClick={handleClick}\r\n        className='curr-location'\r\n      >{props.city}, {props.country}</div>\r\n    );\r\n  }\r\n\r\n  return currentElement;\r\n}","import React from 'react';\r\nimport {useState, useRef} from 'react';\r\n\r\nexport default function ChangeLocationForm(props) {\r\n  const cityPlaceholder = 'London';\r\n  const coutryPlaceholder = 'GB'\r\n  const closeBtnText = 'close';\r\n  const findBtnText = 'change';\r\n\r\n  const [city, setCity] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [btnValue, setBtnValue] = useState(closeBtnText);\r\n  const lastBtnValue = useRef();\r\n  \r\n  function handleKeyboardEvent(e) {\r\n    if (e.key === 'Enter') {\r\n      const currBtnValue = e.target.closest('form').lastElementChild;\r\n      lastBtnValue.current = currBtnValue.value;\r\n      sendOrOnlyÐ¡lose();\r\n    }\r\n  }\r\n\r\n  function handleButtonClick(e) {\r\n    lastBtnValue.current = e.target.value;\r\n    sendOrOnlyÐ¡lose();\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    if (name === 'city') {\r\n      setCity(value);\r\n      defineButtonText(value);\r\n    } else {\r\n      setCountry(value);\r\n    }\r\n  }\r\n \r\n  function defineButtonText(value) {\r\n    if (value) {\r\n      setBtnValue(findBtnText); \r\n    } else {\r\n      setBtnValue(closeBtnText);\r\n    }\r\n  }\r\n\r\n  function sendOrOnlyÐ¡lose() {\r\n    if (lastBtnValue.current === closeBtnText) { \r\n      props.showForm(false);\r\n      return;\r\n    }\r\n    props.changeLocation(city.trim(), country.trim());\r\n    props.showForm(false);\r\n    setCity('');\r\n    setCountry('');\r\n    setBtnValue(closeBtnText);\r\n  }\r\n\r\n  return (\r\n    <form className='change-location-form' onKeyDown={handleKeyboardEvent}>\r\n      <input \r\n        autoFocus\r\n        placeholder={cityPlaceholder}\r\n        autoComplete = 'off'\r\n        className = 'city-inp location-input'\r\n        name='city'\r\n        type='text' \r\n        value={city}\r\n        onChange={handleInputChange}\r\n      />\r\n      <input \r\n        placeholder={coutryPlaceholder}\r\n        autoComplete = 'off'\r\n        className = 'coutry-inp location-input'\r\n        name='coutry'\r\n        type='text' \r\n        value={country}\r\n        onChange={handleInputChange}\r\n        maxLength='2'\r\n      />\r\n      <input \r\n        className='button'\r\n        type='button' \r\n        onClick={handleButtonClick}\r\n        value={btnValue}\r\n      />\r\n    </form>\r\n  )\r\n}","import React from 'react';\r\nimport CurrentLocation from './current-location';\r\nimport ChangeLocationForm from './change-location.js';\r\nimport {useState} from 'react';\r\n\r\nimport '../styles/location.css';\r\n\r\nexport default function Location(props) {\r\n  const [showForm, setShowForm] = useState(false);\r\n  let currentComponent;\r\n\r\n  if (showForm) {\r\n    currentComponent = (\r\n      <ChangeLocationForm  \r\n        changeLocation={props.changeLocation}\r\n        showForm={setShowForm}\r\n      />\r\n    );\r\n  } else {\r\n    currentComponent = (\r\n      <CurrentLocation \r\n        city={props.city} \r\n        country={props.country}\r\n        showForm={setShowForm}\r\n      />\r\n    );\r\n  }\r\n\r\n  return currentComponent;\r\n}","import React from 'react';\r\nimport '../styles/alert.css';\r\n\r\nexport default function Alert(props) {\r\n  const closeButtonSrc = 'https://i.ibb.co/V2fTC1Q/allert-close-button.png';\r\n\r\n  const show = props.alert.isOpen;\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  const message = props.alert.text;\r\n  const closeAlertFunc = props.alert.set;\r\n\r\n  function closeAlert(event) {\r\n    const targClass = event.target.className;\r\n    if ( targClass === 'close-icon' \r\n      || targClass === 'close-button' \r\n      /*|| targClass === 'alert-wrapper'*/ ) {\r\n      closeAlertFunc(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='alert-wrapper' onClick={closeAlert}>\r\n      <div className='alert'>\r\n        <div className='header'>\r\n          <button className='close-button' onClick={closeAlert} >\r\n            <img className='close-icon' src={closeButtonSrc} alt='close' />\r\n          </button>\r\n        </div>\r\n        <div className='body'>\r\n          <div className='content'>{message}</div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport '../styles/index.css';\r\n\r\nimport DateTime from './date-time.js';\r\nimport Temperature from './temperature.js';\r\nimport OutsideWeater from './outside-weather.js';\r\nimport SecondaryInfo from './secondary-info.js';\r\nimport Update from './update.js';\r\nimport Location from './location.js'\r\nimport Alert from './alert';\r\n\r\nexport default function WeatherWidget(props) {\r\n  const data = props.data;\r\n\r\n  return (\r\n    <div className='widget'>\r\n      <Location\r\n        changeLocation={props.changeLocation}\r\n        city={data.city} \r\n        country={data.country} \r\n      />\r\n      <Update \r\n        city={data.city} \r\n        country={data.country} \r\n        updateWeather={props.updateWeather} \r\n        isLoaded={data.dataIsLoaded}\r\n        alert={props.alert}\r\n      />\r\n      <DateTime shiftUTC0={data.date} isLoaded={data.dataIsLoaded}/>\r\n      <Temperature temp={data.temp} feels={data.feelsLike} />\r\n      <OutsideWeater iconId={data.iconId} description={data.description} />\r\n      <hr width='90%' size='1' color='#4f4f4f' />\r\n      <SecondaryInfo info={data.secondaryInfo} /> \r\n      <Alert alert={props.alert} />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {useState, useRef, useEffect} from 'react';\nimport WeatherWidget from './components/weather-widget.js'\n\nconst API_KEY = 'e8afc68129142e12abe4457ecd337411';\nconst METRIC_CELSIUS = '&units=metric';\nconst initialStateOfData = {\n  country: null, \n  city: null, \n  temp: null, \n  feelsLike: null, \n  description: null, \n  iconId: null,\n  date: null, \n  secondaryInfo: {\n    wind: null,\n    humidity: null,\n    pressure: null,\n    visibility: null,\n  },\n  dataIsLoaded: null,\n};\n\nfunction App() {\n  const [data, setData] = useState(initialStateOfData); \n  const previousLocation = useRef(initialStateOfData); \n  const city = useRef('London');\n  const country = useRef('GB');\n\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n  const [alertText, setAlertText] = useState();\n\n  useEffect(() => {\n    // Show the initial location after the first render only\n    doRequest(city.current, country.current);\n    // eslint-disable-next-line\n  }, []); \n\n  function doRequest(currCity, currCountry) {\n    notifyDataIsLoading();\n\n    getWeather(currCity, currCountry)\n      .then (\n      weather => {\n        previousLocation.current = weather;\n        setData(prevWeather => prevWeather = weather);\n      },\n      error => {\n        createAlert(error.message);\n        setData(previousLocation.current);\n      });\n  }\n\n  function handleLocationChange(cityFromInput, countryFromInput) {\n    city.current = cityFromInput\n    if (countryFromInput) {\n      country.current = countryFromInput;\n      doRequest(cityFromInput, countryFromInput);\n    } else {\n      doRequest(cityFromInput);\n    }\n  }\n\n  function notifyDataIsLoading() {\n    let dataCopy = Object.assign({}, data);\n    dataCopy.dataIsLoaded = null;\n    setData(dataCopy);\n  }\n\n  function createAlert(message) {\n    setAlertText(message);\n    setAlertIsOpen(true);\n  }\n  const alertSettings = {\n    isOpen: alertIsOpen,\n    text: alertText,\n    set: setAlertIsOpen,\n    createAlert: createAlert,\n  };\n\n  return (\n    <WeatherWidget\n      data={data}\n      updateWeather={doRequest}\n      changeLocation={handleLocationChange}\n      alert={alertSettings}\n    />\n  ) \n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nasync function getWeather(city, country = '') {\n  let data;\n  try {\n    console.log(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}${METRIC_CELSIUS}&appid=${API_KEY}`);\n    let response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}${METRIC_CELSIUS}&appid=${API_KEY}`);\n    data = await response.json();\n\n    if (data.cod >= 400 || !data) {\n      throw Error();\n    }\n\n  } catch (e) {\n    if (!data) {\n      throw Error('Request error. Check your connection.');\n    } else if (data.cod === '404') { \n      throw Error(`Message from server: \"${data.message}\".\n      You searched for: city - \"${city}\", country - \"${country}\" (country isn't necessary).`);\n    } else {\n      console.log(`${e}. Response code: ${data.cod}. Server message: ${data.message}`);\n      throw Error('Unknown error. Try again later.');\n    }\n  }\n\n  return {\n    country: data.sys.country,\n    city: data.name,\n    temp: data.main.temp,\n    feelsLike: data.main.feels_like,\n    description: data.weather[0].description,\n    iconId: data.weather[0].icon,\n    date: data.timezone,\n    secondaryInfo: {\n      wind: String(data.wind.speed),\n      humidity: String(data.main.humidity),\n      pressure: String(data.main.pressure),\n      visibility: String(data.visibility),\n    },\n    dataIsLoaded: Math.random(),\n  };\n}\n"],"sourceRoot":""}